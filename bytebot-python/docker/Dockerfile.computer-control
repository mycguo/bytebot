# Dockerfile for Computer Control Service
FROM ghcr.io/bytebot-ai/bytebot-desktop:edge

# Set working directory
WORKDIR /app

# Add deadsnakes PPA and install Python 3.11, scrot for screenshots, and fluxbox window manager
RUN add-apt-repository ppa:deadsnakes/ppa -y && \
    apt-get update && \
    apt-get install -y python3.11 python3.11-venv python3.11-dev python3-pip scrot fluxbox x11-apps && \
    rm -rf /var/lib/apt/lists/*

# Make python3.11 default
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 2 \
    && update-alternatives --install /usr/bin/python python /usr/bin/python3.11 2

# Install Poetry
RUN pip install poetry==1.6.1

# Configure Poetry
ENV POETRY_NO_INTERACTION=1 \
    POETRY_VENV_IN_PROJECT=1 \
    POETRY_CACHE_DIR=/tmp/poetry_cache

# Copy project files
COPY pyproject.toml poetry.lock* ./
COPY packages/shared ./packages/shared
COPY packages/computer_control ./packages/computer_control

# Install dependencies directly with pip instead of Poetry
RUN cd packages/shared && pip install -e .
# Install the essential dependencies first (avoiding pyautogui which has install issues)
RUN pip install fastapi uvicorn pydantic sqlalchemy "Pillow>=9.2.0" pynput
# Try to install pyautogui with more lenient settings
RUN pip install pyautogui --no-use-pep517 || pip install pyautogui --only-binary=:all: || echo "Warning: pyautogui installation failed, continuing without it"
RUN cd packages/computer_control && pip install -e . || echo "Warning: some dependencies may not be available"
RUN rm -rf $POETRY_CACHE_DIR


# Set display environment for virtual display
ENV DISPLAY=:99

# Expose port
EXPOSE 9995

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:9995/health || exit 1

# Start script
COPY docker/scripts/start-computer-control.sh /start.sh
RUN chmod +x /start.sh

# Start the bytebotd service
CMD ["/start.sh"]